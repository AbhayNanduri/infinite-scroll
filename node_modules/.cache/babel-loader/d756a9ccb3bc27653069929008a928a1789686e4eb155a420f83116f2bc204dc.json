{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ap279\\\\OneDrive\\\\Desktop\\\\AIE\\\\Semester7\\\\fds\\\\infinite-scroll-app\\\\src\\\\pages\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport ArticleCard from '../components/ArticleCard';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeed = () => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [after, setAfter] = useState(null); // This will hold the `after` token for pagination\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const observer = useRef();\n  const fetchArticles = useCallback(async () => {\n    if (loading) return; // Prevent multiple fetches\n    setLoading(true);\n    console.log('Fetching posts...');\n    try {\n      const url = `https://www.reddit.com/r/technology/new.json?limit=10${after ? `&after=${after}` : ''}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      const newArticles = data.data.children.map(child => child.data);\n      setArticles(prevArticles => [...prevArticles, ...newArticles]);\n      setAfter(data.data.after); // Set the `after` token for the next fetch\n      setHasMore(data.data.after !== null); // Check if there are more posts to load\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    }\n  }, [after, loading]);\n  useEffect(() => {\n    if (hasMore) {\n      fetchArticles();\n    }\n  }, [fetchArticles, hasMore]);\n  const lastArticleElementRef = useCallback(node => {\n    if (loading || !hasMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        console.log('Last element in view, loading more...');\n        setAfter(prevAfter => prevAfter); // This triggers fetching the next set of posts\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-feed\",\n    children: [articles.map((article, index) => {\n      if (articles.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastArticleElementRef,\n          children: /*#__PURE__*/_jsxDEV(ArticleCard, {\n            title: article.title,\n            description: article.selftext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(ArticleCard, {\n          title: article.title,\n          description: article.selftext\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      }\n    }), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this), !hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No more posts to load.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"w/vVRlEqM6dyZUqbqSBZtrfHevw=\");\n_c = NewsFeed;\nexport default NewsFeed;\nvar _c;\n$RefreshReg$(_c, \"NewsFeed\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","ArticleCard","LoadingSpinner","jsxDEV","_jsxDEV","NewsFeed","_s","articles","setArticles","after","setAfter","loading","setLoading","hasMore","setHasMore","observer","fetchArticles","console","log","url","response","fetch","data","json","newArticles","children","map","child","prevArticles","error","lastArticleElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevAfter","observe","className","article","index","length","ref","title","description","selftext","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/ap279/OneDrive/Desktop/AIE/Semester7/fds/infinite-scroll-app/src/pages/NewsFeed.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport ArticleCard from '../components/ArticleCard';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nconst NewsFeed = () => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [after, setAfter] = useState(null); // This will hold the `after` token for pagination\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const observer = useRef();\r\n\r\n  const fetchArticles = useCallback(async () => {\r\n    if (loading) return; // Prevent multiple fetches\r\n    setLoading(true);\r\n    console.log('Fetching posts...');\r\n    try {\r\n      const url = `https://www.reddit.com/r/technology/new.json?limit=10${after ? `&after=${after}` : ''}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      const newArticles = data.data.children.map((child) => child.data);\r\n\r\n      setArticles((prevArticles) => [...prevArticles, ...newArticles]);\r\n      setAfter(data.data.after); // Set the `after` token for the next fetch\r\n      setHasMore(data.data.after !== null); // Check if there are more posts to load\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setLoading(false);\r\n    }\r\n  }, [after, loading]);\r\n\r\n  useEffect(() => {\r\n    if (hasMore) {\r\n      fetchArticles();\r\n    }\r\n  }, [fetchArticles, hasMore]);\r\n\r\n  const lastArticleElementRef = useCallback(\r\n    (node) => {\r\n      if (loading || !hasMore) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('Last element in view, loading more...');\r\n          setAfter((prevAfter) => prevAfter); // This triggers fetching the next set of posts\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  return (\r\n    <div className=\"news-feed\">\r\n      {articles.map((article, index) => {\r\n        if (articles.length === index + 1) {\r\n          return (\r\n            <div ref={lastArticleElementRef} key={article.id}>\r\n              <ArticleCard\r\n                title={article.title}\r\n                description={article.selftext}\r\n              />\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <ArticleCard\r\n              key={article.id}\r\n              title={article.title}\r\n              description={article.selftext}\r\n            />\r\n          );\r\n        }\r\n      })}\r\n      {loading && <LoadingSpinner />}\r\n      {!hasMore && <div>No more posts to load.</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}