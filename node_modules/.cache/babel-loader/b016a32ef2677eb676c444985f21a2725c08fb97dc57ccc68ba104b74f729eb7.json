{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ap279\\\\OneDrive\\\\Desktop\\\\AIE\\\\Semester7\\\\fds\\\\infinite-scroll-app\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true);\n      try {\n        const apiKey = 'your_newsapi_key'; // Replace with your actual API key\n        const response = await axios.get(`https://newsapi.org/v2/top-headlines?country=us&apiKey=${apiKey}&page=${page}`);\n        setPosts([...posts, ...response.data.articles]);\n        setPage(page + 1);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [page, posts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"u+RAY+MWeYGRWjEk2sUjyAvo9co=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","page","setPage","isLoading","setIsLoading","fetchPosts","apiKey","response","get","data","articles","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","content","id","_c","$RefreshReg$"],"sources":["C:/Users/ap279/OneDrive/Desktop/AIE/Semester7/fds/infinite-scroll-app/src/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);   \r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const   \r\n fetchPosts = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const apiKey = 'your_newsapi_key'; // Replace with your actual API key\r\n        const response = await axios.get(`https://newsapi.org/v2/top-headlines?country=us&apiKey=${apiKey}&page=${page}`);\r\n        setPosts([...posts, ...response.data.articles]);\r\n        setPage(page + 1);\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [page, posts]);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <div className=\"loading-spinner\"></div>}\r\n      {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <h2>{post.title}</h2>\r\n          <p>{post.content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MACHY,UAAU,GAAG,MAAAA,CAAA,KAAY;MACpBD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,MAAM,GAAG,kBAAkB,CAAC,CAAC;QACnC,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,0DAA0DF,MAAM,SAASL,IAAI,EAAE,CAAC;QACjHD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGQ,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAC;QAC/CR,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MACnB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,SAAS;QACRP,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,IAAI,EAAEF,KAAK,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAAiB,QAAA,GACGV,SAAS,iBAAIP,OAAA;MAAKkB,SAAS,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACpDnB,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACdxB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAKO,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBtB,OAAA;QAAAiB,QAAA,EAAIO,IAAI,CAACE;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFbE,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CApCID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}