{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ap279\\\\OneDrive\\\\Desktop\\\\AIE\\\\Semester7\\\\fds\\\\infinite-scroll-app\\\\src\\\\pages\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeed = () => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [after, setAfter] = useState(null); // Pagination token\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true); // Controls if more data is available\n  const [error, setError] = useState(null); // Track errors\n  const observer = useRef();\n  const fetchArticles = useCallback(async () => {\n    if (loading) return; // Prevent multiple fetches\n    setLoading(true);\n    console.log('Fetching posts...');\n    try {\n      const url = `https://www.reddit.com/r/technology/new.json?limit=10${after ? `&after=${after}` : ''}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n      }\n      const data = await response.json();\n      const newArticles = data.data.children.map(child => child.data);\n      setArticles(prevArticles => [...prevArticles, ...newArticles]);\n      setAfter(data.data.after); // Update pagination token\n      setHasMore(data.data.after !== null); // Determine if there are more posts\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError(error.message); // Set the error state\n    } finally {\n      setLoading(false); // Stop the loading state\n    }\n  }, [after, loading]);\n  useEffect(() => {\n    if (hasMore) {\n      fetchArticles();\n    }\n  }, [fetchArticles, hasMore]);\n  const lastArticleElementRef = useCallback(node => {\n    if (loading || !hasMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        console.log('Last element in view, loading more...');\n        fetchArticles(); // Call the function directly to fetch more data\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore, fetchArticles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-feed\",\n    children: [articles.map((article, index) => {\n      const articleUrl = `https://www.reddit.com${article.permalink}`;\n      if (articles.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastArticleElementRef,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: articleUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: article.selftext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: articleUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: article.selftext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, article.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n      }\n    }), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), !hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No more posts to load.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"zXApHXc09MFTtEmTfs57lYdowqA=\");\n_c = NewsFeed;\nexport default NewsFeed;\nvar _c;\n$RefreshReg$(_c, \"NewsFeed\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","LoadingSpinner","jsxDEV","_jsxDEV","NewsFeed","_s","articles","setArticles","after","setAfter","loading","setLoading","hasMore","setHasMore","error","setError","observer","fetchArticles","console","log","url","response","fetch","ok","Error","statusText","data","json","newArticles","children","map","child","prevArticles","message","lastArticleElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","className","article","index","articleUrl","permalink","length","ref","href","target","rel","title","fileName","_jsxFileName","lineNumber","columnNumber","selftext","id","_c","$RefreshReg$"],"sources":["C:/Users/ap279/OneDrive/Desktop/AIE/Semester7/fds/infinite-scroll-app/src/pages/NewsFeed.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nconst NewsFeed = () => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [after, setAfter] = useState(null); // Pagination token\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true); // Controls if more data is available\r\n  const [error, setError] = useState(null); // Track errors\r\n  const observer = useRef();\r\n\r\n  const fetchArticles = useCallback(async () => {\r\n    if (loading) return; // Prevent multiple fetches\r\n    setLoading(true);\r\n    console.log('Fetching posts...');\r\n    try {\r\n      const url = `https://www.reddit.com/r/technology/new.json?limit=10${after ? `&after=${after}` : ''}`;\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching data: ${response.statusText}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      const newArticles = data.data.children.map((child) => child.data);\r\n\r\n      setArticles((prevArticles) => [...prevArticles, ...newArticles]);\r\n      setAfter(data.data.after); // Update pagination token\r\n      setHasMore(data.data.after !== null); // Determine if there are more posts\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError(error.message); // Set the error state\r\n    } finally {\r\n      setLoading(false); // Stop the loading state\r\n    }\r\n  }, [after, loading]);\r\n\r\n  useEffect(() => {\r\n    if (hasMore) {\r\n      fetchArticles();\r\n    }\r\n  }, [fetchArticles, hasMore]);\r\n\r\n  const lastArticleElementRef = useCallback(\r\n    (node) => {\r\n      if (loading || !hasMore) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('Last element in view, loading more...');\r\n          fetchArticles(); // Call the function directly to fetch more data\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore, fetchArticles]\r\n  );\r\n\r\n  return (\r\n    <div className=\"news-feed\">\r\n      {articles.map((article, index) => {\r\n        const articleUrl = `https://www.reddit.com${article.permalink}`;\r\n        if (articles.length === index + 1) {\r\n          return (\r\n            <div ref={lastArticleElementRef} key={article.id}>\r\n              <a href={articleUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h2>{article.title}</h2>\r\n                <p>{article.selftext}</p>\r\n              </a>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <a href={articleUrl} target=\"_blank\" rel=\"noopener noreferrer\" key={article.id}>\r\n              <h2>{article.title}</h2>\r\n              <p>{article.selftext}</p>\r\n            </a>\r\n          );\r\n        }\r\n      })}\r\n      {loading && <LoadingSpinner />}\r\n      {error && <div className=\"error-message\">Error: {error}</div>}\r\n      {!hasMore && <div>No more posts to load.</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}